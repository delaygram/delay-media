AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: delay-media

Globals:
  Function:
    Timeout: 5
    Runtime: python3.9
    Architectures: [ x86_64 ]
    Handler: app.lambda_handler
    Layers: [ !Ref DependenciesLayer ]
    Environment:
      Variables:
        StageName: !Ref StageName
        EVENT_BUS: !Ref EventBus

Parameters:
  StageName:
    Type: String
    Default: default
  EventBus:
    Type: String
    Default: default
  AuthArn:
    Type: String
    Default: default

Resources:

  # Media API

  MediaApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: "INFO"
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi.yaml
      BinaryMediaTypes:
        - 'multipart/form-data'
      Auth:
        DefaultAuthorizer: DelaygramAuthorizer
        Authorizers:
          DelaygramAuthorizer:
            UserPoolArn:
              Fn::Sub: arn:aws:cognito-idp:eu-west-3:088217417350:userpool/eu-west-3_${AuthArn}
            Identity:
              Header: token

  # Media API Permissions

  AllowMediaApiToInvokeUploadLambda:
    Type: AWS::Lambda::Permission
    DependsOn: UploadFunction
    Properties:
      FunctionName: !GetAtt UploadFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${MediaApi}/${StageName}/POST/media/upload

  # Functions

#  DeleteFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: functions/delete/
#      Tracing: Active

  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/upload/
      Tracing: Active
    Events:
      S3Event:
        Type: S3
        Properties:
          Bucket: !Ref StorageBucket
          Events: s3:ObjectCreated:*

  # Dependencies

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: delay-media-dependencies-${StageName}
      ContentUri: dependencies
    Metadata:
      BuildMethod: python3.9

  # Storage bucket

  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: delay-media-storage-${StageName}

  # Event bus

#  DeleteSubscription:
#    Type: AWS::Events::Rule
#    Properties:
#      Description: Delete event subscription
#      EventBusName: !Ref EventBus
#      EventPattern:
#        source: [ "delay-media-lambda" ]
#        detail-type: [ "delay-media-delete"]
#      Name: DeleteSubscription
#      Targets:
#        - Arn: !GetAtt DeleteFunction.Arn
#          Id: DeleteFunction
#
#  UploadSubscription:
#    Type: AWS::Events::Rule
#    Properties:
#      Description: Upload event subscription
#      EventBusName: !Ref EventBus
#      EventPattern:
#        source: [ "delay-media-lambda" ]
#        detail-type: [ "delay-media-upload"]
#      Name: UploadSubscription
#      Targets:
#        - Arn: !GetAtt UploadFunction.Arn
#          Id: UploadFunction

Outputs:
#  DeleteFunction:
#    Description: "Delete Lambda Function ARN"
#    Value: !GetAtt DeleteFunction.Arn
  UploadFunction:
    Description: "Upload Lambda Function ARN"
    Value: !GetAtt UploadFunction.Arn